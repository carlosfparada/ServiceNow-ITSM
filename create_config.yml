---
- name: Automate Service Now 
  hosts: linux
  connection: local
  vars:
    node_info: []
  tasks:
    - name: Include variables
      include_vars: main.yml


    - name: Collect Inventory facts
      ansible.builtin.set_stats:
        data:
          node_info: "{{ node_info + [{'hostname': item.ansible_hostname, 'default_ip': item.ansible_facts['default_ipv4']['address'], 'default_mac': item.ansible_facts['default_ipv4']['macaddress'], 'vendor': item.ansible_facts['product_name'] }] }}"
      loop: "{{ groups['linux']Â }}"

    # - name: Create Configuration item
    #   servicenow.itsm.configuration_item:
    #     instance: "{{ instance }}"
    #     name: "{{ item.hostname }}"
    #     ip_address: "{{ item.default_ip }}"
    #     mac_address: "{{ item.default_mac }}"
    #     environment: test
    #     other:
    #       sys_class_name: cmdb_ci_linux_server
    #   loop: "{{ node_info }}"
    #   register: _configuration_item


    # - name: Collect Inventory facts
    #   ansible.builtin.set_stats:
    #     data:
    #       node_info: "{{ node_info + [{'hostname': ansible_hostname, 'default_ip': ansible_facts['default_ipv4']['address'], 'default_mac': ansible_facts['default_ipv4']['macaddress'], 'vendor': ansible_facts['product_name'] }] }}"

    # - name: Create Configuration item
    #   servicenow.itsm.configuration_item:
    #     instance: "{{ instance }}"
    #     name: "{{ item.hostname }}"
    #     ip_address: "{{ item.default_ip }}"
    #     mac_address: "{{ item.default_mac }}"
    #     environment: test
    #     other:
    #       sys_class_name: cmdb_ci_linux_server
    #   loop: "{{ node_info }}"
    #   register: _configuration_item

    - name: Debug Configuration item
      debug:
        msg: "A new Configuration has been created: {{ _configuration_item }}"

